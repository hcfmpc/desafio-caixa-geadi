// <auto-generated />
using System;
using ControleArquivosGEADI.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleArquivosGEADI.API.Migrations
{
    [DbContext(typeof(ControleDbContext))]
    [Migration("20240917124005_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControleArquivosGEADI.API.Entities.Arquivo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("nu_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime>("DataLog")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_log");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_modificacao");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .HasColumnName("no_local");

                    b.Property<long>("LoteId")
                        .HasColumnType("bigint")
                        .HasColumnName("nu_lote_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .HasColumnName("no_arquivo");

                    b.Property<long>("Tamanho")
                        .HasColumnType("bigint")
                        .HasColumnName("qt_bytes");

                    b.HasKey("Id");

                    b.HasIndex("LoteId");

                    b.ToTable("aditb001_controle_arquivos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DataCriacao = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DataLog = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DataModificacao = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Local = "/caminho/para/Arquivo1.csv",
                            LoteId = 1L,
                            Nome = "Arquivo1.csv",
                            Tamanho = 1024L
                        },
                        new
                        {
                            Id = 2L,
                            DataCriacao = new DateTime(2023, 1, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DataLog = new DateTime(2023, 1, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DataModificacao = new DateTime(2023, 1, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Local = "/caminho/para/Arquivo2.csv",
                            LoteId = 1L,
                            Nome = "Arquivo2.csv",
                            Tamanho = 2048L
                        },
                        new
                        {
                            Id = 3L,
                            DataCriacao = new DateTime(2023, 1, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DataLog = new DateTime(2023, 1, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DataModificacao = new DateTime(2023, 1, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Local = "/caminho/para/Arquivo3.csv",
                            LoteId = 1L,
                            Nome = "Arquivo3.csv",
                            Tamanho = 3072L
                        },
                        new
                        {
                            Id = 4L,
                            DataCriacao = new DateTime(2023, 1, 4, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DataLog = new DateTime(2023, 1, 4, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DataModificacao = new DateTime(2023, 1, 4, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Local = "/caminho/para/Arquivo4.csv",
                            LoteId = 2L,
                            Nome = "Arquivo4.csv",
                            Tamanho = 4096L
                        });
                });

            modelBuilder.Entity("ControleArquivosGEADI.API.Entities.Lote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("nu_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_criacao");

                    b.Property<int>("QuantidadeArquivos")
                        .HasColumnType("int")
                        .HasColumnName("qt_arquivos");

                    b.HasKey("Id");

                    b.ToTable("aditb002_lote_arquivos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DataCriacao = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            QuantidadeArquivos = 3
                        },
                        new
                        {
                            Id = 2L,
                            DataCriacao = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            QuantidadeArquivos = 1
                        });
                });

            modelBuilder.Entity("ControleArquivosGEADI.API.Entities.Arquivo", b =>
                {
                    b.HasOne("ControleArquivosGEADI.API.Entities.Lote", "Lote")
                        .WithMany("Arquivos")
                        .HasForeignKey("LoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lote");
                });

            modelBuilder.Entity("ControleArquivosGEADI.API.Entities.Lote", b =>
                {
                    b.Navigation("Arquivos");
                });
#pragma warning restore 612, 618
        }
    }
}
